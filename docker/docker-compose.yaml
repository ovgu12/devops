name: 'universal'

services:
  webserver:
    image: nginx:latest
    networks: 
      - universal_network
    ports:
      - 80:80
  
  docker:
    image: docker:dind
    networks:
      - universal_network
    ports:
      - 2376:2376
    volumes:
      - docker_certs:/certs
      - jenkins_certs:/certs/client
      - jenkins_data:/var/jenkins_home
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    privileged: true
    command: --storage-driver=overlay2

  jenkins:
    build:
      dockerfile: ../jenkins/Dockerfile
    networks:
      - universal_network
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - jenkins_certs:/certs/client:ro
      - jenkins_data:/var/jenkins_home
    environment:
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1

  jenkins-agent:
    image: jenkins/ssh-agent
    networks:
      - universal_network
    ports:
      - 22:22
    environment:
      - JENKINS_AGENT_SSH_PUBKEY=<XXX>

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - universal_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - universal_network
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  monitoring:
    image: prom/prometheus:latest
    networks:
      - universal_network
    ports:
      - 9090:9090
    volumes:
      - ../prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml

  grafana:
    image: grafana/grafana-enterprise:latest
    networks:
      - universal_network
    ports:
      - 3000:3000
    volumes:
      - grafana_storage:/var/lib/grafana

networks:
  universal_network:

volumes:
  grafana_storage: {}
  docker_certs: {}
  jenkins_certs: {}
  jenkins_data: {}